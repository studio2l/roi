{{define "user"}}
{{template "head"}}
{{template "nav" $}}
<div style="padding:15px 10px 15px 10px;z-index:0;"> [

<h2 class="ui dividing header"> [{{$.User}}]

<div class="ui small header"> [타임라인]
<!-- semantic-ui를 이용하기 어려운 부분이라 html5의 flex를 이용함 -->
<div style="display:flex;border:solid 1px #1b1c1d;border-radius:2px;padding:0px 4px;background-color:#1b1c1d"> [
{{range $i, $day := $.Timeline}}
	<!-- 날짜 타일 배경색 지정 -->
	{{$bg := "grey"}}
	{{$numTasks := len (index $.TasksOfDay $day)}}
	{{if ne $numTasks 0}}
		{{$bg = dayColorInTimeline $numTasks}}
	{{end}}
	<!-- 날짜 타일 -->
	<div style="flex:1;height:0.9rem;margin:4px 1px;border-radius:1px;background-color:{{$bg}};font-size:0.7rem;display:flex;align-items:center;justify-content:center;cursor:pointer;" onclick="showTasks({{$day}})"> [
		{{if ne $numTasks 0}}
			{{$numTasks}}
		{{end}}
	]
	<!-- 한 주 구분 -->
	{{if and (isSunday $day) (ne $i (sub (len $.Timeline) 1))}}
		<div style="margin:0px 6px;"> []
	{{end}}
{{end}}
]
<div style="margin: 10px;color:grey;"> [
타임라인의 날짜를 선택해서 당일이 마감인 태스크를 살펴보세요. Esc키를 이용해 전체 태스크 보기로 돌아올 수 있습니다.
]

<div class="ui small header"> [태스크]
{{range $show, $nInStatus := $.NumTasks}}
<div class="ui inverted segment"> [
	<div class="ui grid"> [
		<div class="ui four wide column"> [
			<a href="/units?show={{$show}}&q=assignee:{{$.User}}"> [
				<div class="ui blue large header"> [{{$show}}]
			]
		]
		<div class="ui twelve wide column right aligned"> [
			{{range $status := $.AllTaskStatus}}
			<a href="/units?show={{$show}}&q=assignee:{{$.User}} task-status:{{$status}}"> [
				<div class="ui grey small image label"> [{{$status.UIString}}<div id="show-{{$show}}-status-{{$status}}" class="detail"> [0]]
			]
			{{end}}
		]
	]
	<div class="ui divider"> [
	]
	<div id="show-{{$show}}-tasks-of-day" class="tasks-of-day ui grey inverted segment"> [
	]
]
{{end}}
]

<script> [``
let taskFromID = {
	{{range $id, $t := $.TaskFromID}}
	"{{$id}}": {
		"show": "{{$t.Show}}",
		"category": "{{$t.Category}}",
		"unit": "{{$t.Unit}}",
		"task": "{{$t.Task}}",
		"status": "{{$t.Status}}",
	},
	{{end}}
};

let tasksOfDay = {
	{{range $day, $tasks := $.TasksOfDay -}}
	"{{$day}}": [
		{{range $id := $tasks -}}
		"{{$id}}",
		{{end}}
	],
	{{end}}
};

let allTaskStatus = [
	{{range $s := $.AllTaskStatus}}
	"{{$s}}",
	{{- end}}
];

function showTasks(day) {
	// 기존 태스크 링크 삭제
	let els = document.getElementsByClassName("tasks-of-day");
	for (i = 0; i < els.length; i++) {
		els[i].innerHTML = "";
	}
	tasks = [];
	if (day == "") {
		for (let id in taskFromID) {
			tasks.push(id);
		}
	} else if (tasksOfDay[day]) {
		tasks = tasksOfDay[day];
	}
	tasks.sort();
	// 태스크 링크 추가
	for (i = 0; i < tasks.length; i++) {
		let t = taskFromID[tasks[i]];
		let el = document.getElementById("show-" + t.show + "-tasks-of-day");
		let label = document.createElement("a");
		label.setAttribute("href", "/" + t.category + "s?show=" + t.show + "&q=" + t.unit);
		label.setAttribute("class", "ui small label");
		label.innerHTML = t.unit;
		detail = document.createElement("div");
		detail.setAttribute("class", "detail");
		detail.innerHTML = t.task;
		label.append(detail);
		el.append(label);
	}
	// 프로젝트별 태스크 상태 수정
	let numTaskStatusPerShow = {}; // [show][status]int
	for (let task in taskFromID) {
		let t = taskFromID[task];
		if (numTaskStatusPerShow[t.show] == null) {
			numTaskStatusPerShow[t.show] = {};
		}
	}
	for (let show in numTaskStatusPerShow) {
		for (i = 0; i < allTaskStatus.length; i++) {
			let status = allTaskStatus[i];
			numTaskStatusPerShow[show][status] = 0;
		}
	}
	for (i = 0; i < tasks.length; i++) {
		let t = taskFromID[tasks[i]];
		numTaskStatusPerShow[t.show][t.status] += 1;
	}
	for (let show in numTaskStatusPerShow) {
		let numTaskStatus = numTaskStatusPerShow[show]
		for (let status in numTaskStatus) {
			let n = numTaskStatus[status];
			let el = document.getElementById("show-" + show + "-status-" + status);
			el.innerHTML = n;
		}
	}
}

// 기본적으로 전체 태스크를 보인다.
showTasks("");

// Esc 키를 눌렀을 때도 전체 태스크로 돌아간다.
function keyDownEvent(e) {
	if (e.key == "Escape"){
		showTasks("");
	}
}

document.addEventListener("keydown", keyDownEvent, false);

``]
{{template "footer"}}
{{end}}
